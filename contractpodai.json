{
  "openapi": "3.1.0",
  "info": {
    "title": "ContractPodAiÂ®",
    "description": "Leah Copilot Api",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/query_results": {
      "post": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Query Results",
        "description": "This function fetches the query results based on the project id or function id.",
        "operationId": "Query_results_v1_query_results_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryResultRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResultAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/data/points": {
      "post": {
        "tags": [
          "V1",
          "Point"
        ],
        "summary": "Extraction Data Point Create",
        "description": "@param payload: extraction data point api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_Data_Point_create_v1_data_points_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionDataPointCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Point"
        ],
        "summary": "Extraction Data Point Delete",
        "description": "@param payload: extraction data point delete payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_Data_Point_delete_v1_data_points_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionDataPointDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/data/points/{data_point_id}": {
      "get": {
        "tags": [
          "V1",
          "Point"
        ],
        "summary": "Extraction Data Point Read",
        "description": "@param data_point_id: data point id\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_data_point_read_v1_data_points__data_point_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "data_point_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Point Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPointsResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Point"
        ],
        "summary": "Extraction Data Point Update",
        "description": "@param data_point_id: data point id\n@param payload: leah drive update payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_Data_Point_update_v1_data_points__data_point_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "data_point_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Data Point Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionDataPointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/data/points/all": {
      "post": {
        "tags": [
          "V1",
          "Point"
        ],
        "summary": "Extraction Data Points Listing",
        "description": "@param payload: extraction data points list payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_data_points_listing_v1_data_points_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionDataPointsList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPointAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/drive": {
      "post": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Create",
        "description": "@param background_task: background task client\n@param payload: leah drive api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_Drive_create_v1_functions_drive_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahCreateDriveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahDriveResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Delete",
        "description": "@param payload: leah_drive delete payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_drive_delete_v1_functions_drive_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahDriveDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/drive/{leah_drive_id}": {
      "get": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Read",
        "description": "@param leah_drive_id: leah drive id\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_drive_read_v1_functions_drive__leah_drive_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "leah_drive_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Leah Drive Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahDriveRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Update",
        "description": "@param leah_drive_id: leah_drive id\n@param payload: leah drive update payload\n@param current_user: active user context from current context\n@param background_task: background task client\n@return:",
        "operationId": "Leah_Drive_update_v1_functions_drive__leah_drive_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "leah_drive_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Leah Drive Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahDriveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahDriveResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/drive/all": {
      "post": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Listing",
        "description": "@param payload: leah drive list payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_drive_listing_v1_functions_drive_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahDriveList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahDriveAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/drive/{drive_id}/documents": {
      "post": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Files",
        "description": "@param payload: leah drive file listing request model\n@param drive_id: leah drive id\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_drive_files_v1_functions_drive__drive_id__documents_post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "drive_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Drive Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahDriveFilesList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahDriveFileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Document Deletion",
        "description": "Delete requested documents from drive",
        "operationId": "Leah_drive_document_deletion_v1_functions_drive__drive_id__documents_delete",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "drive_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Drive Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeahDriveDocDelete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/drive/action/{toggle_action}": {
      "patch": {
        "tags": [
          "V1",
          "Drive"
        ],
        "summary": "Leah Drive Toggle",
        "description": "@param payload: leah drive toggle payload\n@param toggle_action: leah drive toggle_action\n@param current_user: active user context from current context\n@return:",
        "operationId": "Leah_drive_toggle_v1_functions_drive_action__toggle_action__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/drive/ask_leah": {
      "post": {
        "tags": [
          "V1",
          "Drive",
          "LLM",
          "Streaming"
        ],
        "summary": "Ask Leah Drive",
        "description": "@param payload: ask leah drive api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Ask_leah_drive_v1_functions_drive_ask_leah_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AskLeahDrive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/extract": {
      "post": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Create",
        "description": "Function for creating extraction function",
        "operationId": "Extraction_Function_create_v1_functions_extract_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionFunctionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractionFunctionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Delete",
        "description": "Function to delete the extraction functions",
        "operationId": "Extraction_Function_delete_v1_functions_extract_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionFunctionDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/extract/{extraction_function_id}": {
      "get": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Read",
        "description": "Read the extraction function by id",
        "operationId": "Extraction_Function_read_v1_functions_extract__extraction_function_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "extraction_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extraction Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractionFunctionRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Update",
        "description": "Update the extraction function with the payload data",
        "operationId": "Extraction_Function_update_v1_functions_extract__extraction_function_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "extraction_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extraction Function Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionFunctionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractionFunctionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/extract/all": {
      "post": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Listing",
        "description": "Function to list all the extraction functions",
        "operationId": "Extraction_Function_listing_v1_functions_extract_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionFunctionList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractionFunctionAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/extract/action/{toggle_action}": {
      "patch": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Extraction Function Toggle",
        "description": "Function to toggle the extraction function",
        "operationId": "Extraction_Function_toggle_v1_functions_extract_action__toggle_action__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/extract_action_generation": {
      "post": {
        "tags": [
          "V1",
          "Streaming",
          "Extraction",
          "LLM"
        ],
        "summary": "Extraction Function Report Generation",
        "description": "@param payload: extraction function report generation api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Extraction_Function_Report_Generation_v1_extract_action_generation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractionFunctionReportGeneration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/download_excel_files": {
      "post": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Download Excel Files",
        "description": "Download Excel files\n@return:",
        "operationId": "Download_Excel_Files_v1_download_excel_files_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadExcelFiles"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/get_parsed_data": {
      "post": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Get Parsed Data",
        "description": "@param payload: get parsed data api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Get_parsed_data_v1_get_parsed_data_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetParsedDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GetParsedDataResult"
                  },
                  "type": "array",
                  "title": "Response Get Parsed Data V1 Get Parsed Data Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/upload_extract_template": {
      "post": {
        "tags": [
          "V1",
          "Extraction"
        ],
        "summary": "Upload Extract Template",
        "description": "@param file: upload extract template file\n@param current_user: active user context from current context\n@return:",
        "operationId": "Upload_extract_template_v1_upload_extract_template_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Upload_extract_template_v1_upload_extract_template_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractionUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/helpdesk": {
      "post": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Helpdesk Function Create",
        "operationId": "Helpdesk_Function_create_v1_functions_helpdesk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpdeskFunctionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpdeskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Helpdesk Delete",
        "operationId": "Helpdesk_delete_v1_functions_helpdesk_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpdeskFunctionDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/helpdesk/{helpdesk_function_id}": {
      "get": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Helpdesk Read",
        "operationId": "Helpdesk_read_v1_functions_helpdesk__helpdesk_function_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "helpdesk_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Helpdesk Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpdeskRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Helpdesk Function Update",
        "operationId": "Helpdesk_Function_update_v1_functions_helpdesk__helpdesk_function_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "helpdesk_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Helpdesk Function Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpdeskFunctionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpdeskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/helpdesk/all": {
      "post": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Leah Helpdesk Listing",
        "operationId": "Leah_helpdesk_listing_v1_functions_helpdesk_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListAllHelpdeskFunction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelpdeskAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/helpdesk/action/{toggle_action}": {
      "patch": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Leah Helpdesk Toggle",
        "operationId": "Leah_helpdesk_toggle_v1_functions_helpdesk_action__toggle_action__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/helpdesk_query": {
      "post": {
        "tags": [
          "V1",
          "Helpdesk"
        ],
        "summary": "Helpdesk Query",
        "description": "Execute Helpdesk query on Document with function\n@return:",
        "operationId": "Helpdesk_Query_v1_helpdesk_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelpdeskQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/documents/{doc_id}": {
      "get": {
        "tags": [
          "V1",
          "Document"
        ],
        "summary": "Documents Read By Id",
        "description": "@param doc_id: document id from url path\n@param current_user: active user context from current context\n@return:",
        "operationId": "Documents_Read_By_Id_v1_documents__doc_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doc Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentReadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/{doc_id}/clauses": {
      "get": {
        "tags": [
          "V1",
          "Document"
        ],
        "summary": "Clauses With Document Id",
        "description": "Listing clause para using document id",
        "operationId": "Clauses_with_document_id_v1_documents__doc_id__clauses_get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doc Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentClauseReadResponse"
                  },
                  "title": "Response Clauses With Document Id V1 Documents  Doc Id  Clauses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/{doc_id}/copy": {
      "post": {
        "tags": [
          "V1",
          "Document"
        ],
        "summary": "Copy Document From Function To Project",
        "description": "Copy document from function to project",
        "operationId": "Copy_document_from_function_to_project_v1_documents__doc_id__copy_post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Doc Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/resubmit": {
      "post": {
        "tags": [
          "V1",
          "Document"
        ],
        "summary": "Document Resubmit",
        "operationId": "Document_Resubmit_v1_documents_resubmit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentsResubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/documents/klo_list": {
      "post": {
        "tags": [
          "V1",
          "Document",
          "KLO"
        ],
        "summary": "List Klo",
        "operationId": "List_Klo_v1_documents_klo_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KloListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KloListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/discovery_search": {
      "post": {
        "tags": [
          "V1",
          "Streaming",
          "Discovery",
          "LLM"
        ],
        "summary": "Streaming",
        "description": "@param payload: discovery api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Streaming_v1_discovery_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoverySearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/discovery_suggested_question": {
      "post": {
        "tags": [
          "V1",
          "Discovery",
          "LLM"
        ],
        "summary": "Discovery Suggested Questions",
        "description": "Discovery multiquery search",
        "operationId": "Discovery_Suggested_questions_v1_discovery_suggested_question_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoverySuggestedQuestionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoverySuggestedQuestionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/multiquery_discovery_search": {
      "post": {
        "tags": [
          "V1",
          "Streaming",
          "Discovery",
          "LLM"
        ],
        "summary": "Multiquery Streaming",
        "description": "Discovery multiquery search",
        "operationId": "Multiquery_Streaming_v1_multiquery_discovery_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryMultiQuerySearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/discovery_report_generation": {
      "post": {
        "tags": [
          "V1",
          "Streaming",
          "Discovery",
          "LLM"
        ],
        "summary": "Discovery Report Generation",
        "description": "Discovery Report generation",
        "operationId": "Discovery_Report_Generation_v1_discovery_report_generation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoveryReportGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryReportGenerationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/user_prompt_search": {
      "post": {
        "tags": [
          "V1",
          "Streaming",
          "Playground",
          "LLM"
        ],
        "summary": "Streaming",
        "description": "@param payload: User prompt search api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Streaming_v1_user_prompt_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPromptSearch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/ping": {
      "get": {
        "tags": [
          "V1"
        ],
        "summary": "Ping",
        "description": "Api health checkup with pymongo\n@return: response message",
        "operationId": "ping_v1_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/resource_upload": {
      "post": {
        "tags": [
          "V1"
        ],
        "summary": "File Upload",
        "description": "General Upload Endpoint",
        "operationId": "File_Upload_v1_resource_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_File_Upload_v1_resource_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchFileUploadApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "name": "Document Upload Api"
      }
    },
    "/v1/upload_template": {
      "post": {
        "tags": [
          "V1"
        ],
        "summary": "Upload Template",
        "description": "Template Upload Endpoint",
        "operationId": "Upload_Template_v1_upload_template_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Upload_Template_v1_upload_template_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchFileUploadApiResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "name": "Upload Template Api"
      }
    },
    "/v1/llm/models": {
      "post": {
        "tags": [
          "V1",
          "Model"
        ],
        "summary": "Create Llm Model",
        "description": "LLM Model data create endpoint\n@return: response message",
        "operationId": "create_llm_model_v1_llm_models_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LargeLanguageModelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LargeLanguageModelResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Model"
        ],
        "summary": "Delete Llm Model",
        "description": "LLM Model data delete endpoint\n@return: response message",
        "operationId": "delete_llm_model_v1_llm_models_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LargeLanguageModelDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/llm/models/all": {
      "post": {
        "tags": [
          "V1",
          "Model"
        ],
        "summary": "Read Llm Model",
        "description": "LLM Model data read endpoint\n@return: response message",
        "operationId": "read_llm_model_v1_llm_models_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LargeLanguageModelReadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LargeLanguageModelListingResponse"
                  },
                  "type": "array",
                  "title": "Response Read Llm Model V1 Llm Models All Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/llm/models/{model_id}": {
      "patch": {
        "tags": [
          "V1",
          "Model"
        ],
        "summary": "Update Llm Model",
        "description": "LLM Model data update endpoint\n@return: response message",
        "operationId": "update_llm_model_v1_llm_models__model_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LargeLanguageModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LargeLanguageModelListingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/templates/extract_rules": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "Template"
        ],
        "summary": "Extract Template Rules",
        "description": "Redline rule extraction",
        "operationId": "extract_template_rules_v1_templates_extract_rules_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateExtractRuleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateExtractRuleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/templates/clause_mapping": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "Template"
        ],
        "summary": "Get Template Clauses",
        "description": "Redline rule extraction",
        "operationId": "get_template_clauses_v1_templates_clause_mapping_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateClauseMappingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TemplateClausesResponse"
                  },
                  "type": "array",
                  "title": "Response Get Template Clauses V1 Templates Clause Mapping Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/contract_types": {
      "post": {
        "tags": [
          "V1",
          "ContractType"
        ],
        "summary": "Contract Type Create",
        "description": "Creates a new contract type based on the provided payload.",
        "operationId": "Contract_Type_create_v1_contract_types_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTypeCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTypeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "ContractType"
        ],
        "summary": "Contract Type Delete",
        "description": "Delete an existing contract type based on the provided contract_type_ids.",
        "operationId": "Contract_Type_delete_v1_contract_types_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTypeDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/contract_types/{contract_type_id}": {
      "patch": {
        "tags": [
          "V1",
          "ContractType"
        ],
        "summary": "Contract Type Update",
        "description": "Updates an existing contract type based on the provided payload.",
        "operationId": "Contract_Type_update_v1_contract_types__contract_type_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "contract_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contract Type Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTypeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/get_contract_types": {
      "post": {
        "tags": [
          "V1",
          "ContractType"
        ],
        "summary": "Contract Type Read",
        "description": "Read contract types based on the provided payload.",
        "operationId": "Contract_Type_read_v1_get_contract_types_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTypeRead"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContractTypeResponse"
                  },
                  "type": "array",
                  "title": "Response Contract Type Read V1 Get Contract Types Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/contract_types/all": {
      "post": {
        "tags": [
          "V1",
          "ContractType"
        ],
        "summary": "Contract Type List",
        "description": "List contract types based on the provided payload, returns result with the filtered, sorted,\nand paginated contract type data",
        "operationId": "Contract_Type_list_v1_contract_types_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractTypeAll"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractTypeListingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/discovery": {
      "post": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Create",
        "description": "@param payload: extraction function api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Discovery_Action_create_v1_functions_discovery_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscoveryAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFunctionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Delete",
        "description": "@param payload: extraction function delete payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Discovery_Action_delete_v1_functions_discovery_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDiscoveryAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/discovery/{discovery_function_id}": {
      "get": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Read",
        "description": "@param discovery_function_id: discovery function id\n@param current_user: active user context from current context\n@return:",
        "operationId": "Discovery_Action_read_v1_functions_discovery__discovery_function_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "discovery_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Discovery Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFunctionResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Update",
        "description": "@param discovery_function_id: discovery function id\n@param payload: discovery action update payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Discovery_Action_update_v1_functions_discovery__discovery_function_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "discovery_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Discovery Function Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscoveryAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFunctionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/functions/discovery/all": {
      "post": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Listing",
        "description": "@param payload: discovery action function list payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "Discovery_Action_listing_v1_functions_discovery_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListAllDiscoveryAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoveryFunctionAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/discovery/action/{toggle_action}": {
      "patch": {
        "tags": [
          "V1",
          "Discovery"
        ],
        "summary": "Discovery Action Toggle",
        "description": "Toggle DiscoveryAction\n\n    <b>toggle_action<b/> :  activate, deactivate",
        "operationId": "Discovery_Action_toggle_v1_functions_discovery_action__toggle_action__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/groups": {
      "post": {
        "tags": [
          "V1",
          "UserGroups"
        ],
        "summary": "User Group Create",
        "description": "create user groups",
        "operationId": "User_group_create_v1_user_groups_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupsCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "UserGroups"
        ],
        "summary": "User Groups Delete",
        "description": "delete user groups",
        "operationId": "User_Groups_delete_v1_user_groups_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupsDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/user/groups/{user_group_id}": {
      "get": {
        "tags": [
          "V1",
          "UserGroups"
        ],
        "summary": "Read User Group By Id",
        "description": "Read user group by id",
        "operationId": "Read_user_group_by_id_v1_user_groups__user_group_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "user_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupsRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "UserGroups"
        ],
        "summary": "Update User Groups",
        "description": "Update user group",
        "operationId": "Update_user_groups_v1_user_groups__user_group_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "user_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/groups/all": {
      "post": {
        "tags": [
          "V1",
          "UserGroups"
        ],
        "summary": "List All User Groups",
        "description": "List all User Groups",
        "operationId": "List_all_User_Groups_v1_user_groups_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupsList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupsAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/projects": {
      "post": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Create Project",
        "description": "Create projects",
        "operationId": "Create_project_v1_projects_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Delete Project",
        "description": "Delete projects",
        "operationId": "Delete_project_v1_projects_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/projects/{project_id}": {
      "get": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Read Project By Id",
        "description": "Read projects by Id",
        "operationId": "Read_project_by_Id_v1_projects__project_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "include_document",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Update Project By Id",
        "description": "Update project by Id",
        "operationId": "Update_project_by_Id_v1_projects__project_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/all": {
      "post": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "List All Projects",
        "description": "List all projects",
        "operationId": "List_all_projects_v1_projects_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/projects/{project_id}/pin": {
      "patch": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Pin Project By Id",
        "description": "Pin the project",
        "operationId": "Pin_project_by_Id_v1_projects__project_id__pin_patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PinProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/documents": {
      "post": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "List Documents Of Project",
        "description": "Listing documents of project",
        "operationId": "List_documents_of_project_v1_projects__project_id__documents_post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetProjectsDocumentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAllDocumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/parse_all_data": {
      "post": {
        "tags": [
          "V1",
          "Project"
        ],
        "summary": "Parse All Data",
        "operationId": "Parse_all_data_v1_projects__project_id__parse_all_data_post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseAllDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseAllDataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/knowledge_base_trigger": {
      "post": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Redline Knowledge Base Trigger",
        "description": "@param payload: payload\n@param background_task: background_task\n@param current_user: active user context from current context\n@return:",
        "operationId": "Redline_knowledge_base_trigger_v1_redline_knowledge_base_trigger_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineKnowledgeBaseTriggerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/{function_id}/documents": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "List Redline Function Documents",
        "description": "Function to list all the documents in the provided redline function",
        "operationId": "List_redline_function_documents_v1_redline__function_id__documents_get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RedlineDocumentsListResponse"
                  },
                  "title": "Response List Redline Function Documents V1 Redline  Function Id  Documents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/{redline_function_id}/recommendations": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "List Reline Clause Recommendations",
        "description": "Function to list all the documents in the provided redline function",
        "operationId": "List_reline_clause_recommendations_v1_redline__redline_function_id__recommendations_get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "redline_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Redline Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response List Reline Clause Recommendations V1 Redline  Redline Function Id  Recommendations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/{redline_function_id}/precedences": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "List Redline Clause Precedence",
        "description": "Function to list all the documents in the provided redline function",
        "operationId": "List_redline_clause_precedence_v1_redline__redline_function_id__precedences_get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "redline_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Redline Function Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "title": "Response List Redline Clause Precedence V1 Redline  Redline Function Id  Precedences Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/{redline_function_id}/precedences/all": {
      "post": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "List Redline Clause Precedence",
        "description": "Function to list all the documents in the provided redline function",
        "operationId": "List_redline_clause_precedence_v1_redline__redline_function_id__precedences_all_post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "redline_function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Redline Function Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineRecommendedClauseListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineRecommendedClauseCursorPointResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/extract_clauses": {
      "post": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Execute Wrapper Matching",
        "description": "list the most favorable clause",
        "operationId": "Execute_wrapper_matching_v1_redline_extract_clauses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineRecommendedClauseActionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineExtractedClauseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/leah/recommendation_types": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Listing Recommendations",
        "description": "list the most favorable clause",
        "operationId": "Listing_recommendations_v1_leah_recommendation_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeahRecommendationTypeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/redline/duplicate/check": {
      "post": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Redline Functions Duplicate Name Check",
        "operationId": "redline_functions_duplicate_name_check_v1_functions_redline_duplicate_check_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineFunctionDuplicateCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineFunctionDuplicateCheckResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/functions/redline/redline_functions": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Get All Redline Function",
        "description": "Get RedlineFunction",
        "operationId": "get_all_redline_function_v1_functions_redline_redline_functions_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineFunctionListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineFunctionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/models/redline/list": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "Models"
        ],
        "summary": "List Contract Type Specific Redline Model",
        "description": "List contract type specific redline models endpoint",
        "operationId": "list_contract_type_specific_redline_model_v1_models_redline_list_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListContractTypeSpecificRedlineModels"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContractTypeSpecificRedlineModelsResponse"
                  },
                  "type": "array",
                  "title": "Response List Contract Type Specific Redline Model V1 Models Redline List Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/download": {
      "post": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Download File",
        "description": "Download Redline Document",
        "operationId": "download_file_v1_redline_download_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/prompts": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Get Redline Prompts",
        "description": "Get the prompts from redline",
        "operationId": "get_redline_prompts_v1_redline_prompts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlinePromptResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/load_saved_redline": {
      "get": {
        "tags": [
          "V1",
          "Redline"
        ],
        "summary": "Load Saved Redline",
        "operationId": "load_saved_redline_v1_redline_load_saved_redline_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedRedlineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedRedlineResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/assist": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "LLM"
        ],
        "summary": "Redline Assists",
        "operationId": "redline_assists_v1_redline_assist_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineAssist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineAssistResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/deviation_redraft": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "LLM"
        ],
        "summary": "Deviation Redraft",
        "operationId": "deviation_redraft_v1_redline_deviation_redraft_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviationRedraftRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/stream_redraft_remediation": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "LLM"
        ],
        "summary": "Stream Redraft Remediation",
        "operationId": "stream_redraft_remediation_v1_redline_stream_redraft_remediation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StreamRedraftRemediationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/clauses": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "Clause"
        ],
        "summary": "Create Redline Clause",
        "operationId": "create_redline_clause_v1_redline_clauses_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineClauseCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineClauseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "V1",
          "Redline",
          "Clause"
        ],
        "summary": "Delete Redline Clause",
        "operationId": "delete_redline_clause_v1_redline_clauses_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineClauseActionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "patch": {
        "tags": [
          "V1",
          "Redline",
          "Clause"
        ],
        "summary": "Update Redline Clause",
        "operationId": "update_redline_clause_v1_redline_clauses_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineUpdateClauseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RedlineClauseResponse"
                  },
                  "type": "array",
                  "title": "Response Update Redline Clause V1 Redline Clauses Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/redline/clauses/{clause_id}": {
      "get": {
        "tags": [
          "V1",
          "Redline",
          "Clause"
        ],
        "summary": "Read Redline Clause",
        "operationId": "read_redline_clause_v1_redline_clauses__clause_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "clause_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Clause Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineClauseReadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/redline/clauses/all": {
      "post": {
        "tags": [
          "V1",
          "Redline",
          "Clause"
        ],
        "summary": "List Redline Clause",
        "operationId": "list_redline_clause_v1_redline_clauses_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedlineClauseReadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedlineClauseListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/v1/prompts/{prompt_id}": {
      "get": {
        "tags": [
          "V1",
          "Prompt"
        ],
        "summary": "Read Prompt By Id",
        "description": "Retrieve a prompt record by its ID.\n\nParameters:\n- prompt_id (str): The ID of the prompt record to retrieve.\n- current_user (User): The current user accessing the prompt.",
        "operationId": "read_prompt_by_id_v1_prompts__prompt_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prompt Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "V1",
          "Prompt"
        ],
        "summary": "Update Prompt By Id",
        "description": "Update a prompt by its ID.\n\nParameters:\n- payload (PromptUpdateRequest): The data to update the prompt.\n- prompt_id (str): The ID of the prompt to update.\n- current_user (User): The current user making the update request.",
        "operationId": "update_prompt_by_id_v1_prompts__prompt_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prompt Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/prompts/all": {
      "post": {
        "tags": [
          "V1",
          "Prompt"
        ],
        "summary": "Get Promtp List",
        "description": "Retrieve a list of prompts based on the provided filter criteria and pagination parameters.\n\nParameters:\n- payload: PromptListRequest - The request payload containing the filter string, cursor point, and limit.\n- current_user: User - The current authenticated user.",
        "operationId": "get_promtp_list_v1_prompts_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptPaginationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authorization",
          "Auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authorization",
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Authorization",
          "Auth"
        ],
        "summary": "Auth Me",
        "description": "Auth me",
        "operationId": "auth_me_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthMeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Revoke Token",
        "operationId": "revoke_token_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/roles": {
      "post": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Create Roles And Permissions",
        "description": "Create roles and permissions",
        "operationId": "Create_roles_and_permissions_auth_roles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesAndPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Delete Roles And Permissions",
        "description": "Delete roles and permissions by id",
        "operationId": "Delete_roles_and_permissions_auth_roles_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRolesAndPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseMessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/roles/{role_id}": {
      "get": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Get Roles And Permissions By Id",
        "description": "Read roles and permissions by id",
        "operationId": "Get_roles_and_permissions_by_id_auth_roles__role_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Update Roles And Permissions By Id",
        "description": "Update roles and permissions by id",
        "operationId": "Update_roles_and_permissions_by_id_auth_roles__role_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesAndPermissionsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/roles/permissions/all": {
      "get": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Get All Roles And Permissions",
        "description": "Get all roles and permissions",
        "operationId": "Get_all_roles_and_permissions_auth_roles_permissions_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPermissionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/roles/listing": {
      "post": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Delete Roles And Permissions",
        "description": "List all roles and permissions by id",
        "operationId": "Delete_roles_and_permissions_auth_roles_listing_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListRolesAndPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionsAllResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/permissions": {
      "patch": {
        "tags": [
          "Authorization",
          "RolesAndPermissions"
        ],
        "summary": "Update Tenant Permissions",
        "description": "Update tenant permission",
        "operationId": "Update_tenant_permissions_auth_permissions_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityPayloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTenantPermissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/sso/providers/available": {
      "get": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Available Integrations",
        "operationId": "Available_Integrations_auth_sso_providers_available_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOAvailableIntegrationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/sso/providers": {
      "post": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Create",
        "description": "@param payload: sso provider api request payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "SSO_Provider_create_auth_sso_providers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Delete",
        "description": "@param payload: sso provider delete payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "SSO_Provider_delete_auth_sso_providers_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOProviderDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/sso/providers/{sso_provider_id}": {
      "get": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Read",
        "description": "@param sso_provider_id: sso provider id\n@param current_user: active user context from current context\n@return:",
        "operationId": "SSO_Provider_read_auth_sso_providers__sso_provider_id__get",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "sso_provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sso Provider Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Update",
        "description": "@param sso_provider_id: sso provider id\n@param payload: sso provider update payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "SSO_Provider_update_auth_sso_providers__sso_provider_id__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "sso_provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Sso Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOProviderChange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderRecordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sso/providers/all": {
      "post": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Listing",
        "description": "@param payload: sso provider list payload\n@param current_user: active user context from current context\n@return:",
        "operationId": "SSO_Provider_listing_auth_sso_providers_all_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOProviderList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "CopilotSecurity": []
          }
        ]
      }
    },
    "/auth/sso/providers/action/{toggle_action}": {
      "patch": {
        "tags": [
          "Authorization",
          "SSO"
        ],
        "summary": "Sso Provider Toggle",
        "operationId": "SSO_Provider_Toggle_auth_sso_providers_action__toggle_action__patch",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SSOProviderToggleAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOProviderToggleActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/mfa/otp/generate": {
      "post": {
        "tags": [
          "Authorization",
          "MFA"
        ],
        "summary": "Generate Otp",
        "operationId": "generate_otp_auth_mfa_otp_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MfaGenerateOtpResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/mfa/otp/verify": {
      "post": {
        "tags": [
          "Authorization",
          "MFA"
        ],
        "summary": "Verify Otp",
        "operationId": "verify_otp_auth_mfa_otp_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/mfa/action/{toggle_action}": {
      "post": {
        "tags": [
          "Authorization",
          "MFA"
        ],
        "summary": "Toggle Mfa",
        "operationId": "toggle_mfa_auth_mfa_action__toggle_action__post",
        "security": [
          {
            "CopilotSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "toggle_action",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Toggle Action"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetMfaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MfaToggleActionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AllProjectRequest": {
        "properties": {
          "project_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "ProjectType"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "ProjectName"
          },
          "me": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Me",
            "description": "Me",
            "default": false
          },
          "function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Id",
            "description": "FunctionId"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Limit",
            "default": 20
          },
          "sort_order": {
            "type": "integer",
            "enum": [
              1,
              -1
            ],
            "title": "Sort Order",
            "description": "SortOrder",
            "default": 1
          },
          "sort_key": {
            "type": "string",
            "enum": [
              "project_name",
              "create_time",
              "last_update_time"
            ],
            "title": "Sort Key",
            "description": "SortOrder",
            "default": "last_update_time"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point",
            "description": "CursorPoint",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "project_type"
        ],
        "title": "AllProjectRequest"
      },
      "AskLeahDrive": {
        "properties": {
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "description": "FunctionId"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Query"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocIds",
            "default": []
          },
          "is_drive_search": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Drive Search",
            "description": "IsDriveSearch",
            "default": false
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "ProjectId"
          },
          "chat_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChatModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "ChatModel"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "ResponseLanguage"
          }
        },
        "type": "object",
        "required": [
          "function_id",
          "query"
        ],
        "title": "AskLeahDrive"
      },
      "AuthMeResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "user_status": {
            "type": "string",
            "title": "User Status"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "role_id": {
            "type": "string",
            "title": "Role Id"
          },
          "blob_connection_string": {
            "type": "string",
            "title": "Blob Connection String"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name"
          },
          "user_group_ids": {
            "items": {},
            "type": "array",
            "title": "User Group Ids",
            "default": []
          },
          "last_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Session Id"
          },
          "last_successful_login": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Successful Login"
          },
          "permissions": {
            "type": "object",
            "title": "Permissions",
            "default": {}
          },
          "tenant_resources": {
            "items": {},
            "type": "array",
            "title": "Tenant Resources",
            "default": []
          },
          "disclaimer_checked": {
            "type": "boolean",
            "title": "Disclaimer Checked",
            "default": false
          },
          "is_super_admin": {
            "type": "boolean",
            "title": "Is Super Admin",
            "default": false
          },
          "use_document_ingestion": {
            "items": {},
            "type": "array",
            "title": "Use Document Ingestion",
            "default": []
          },
          "totp_enabled": {
            "type": "boolean",
            "title": "Totp Enabled",
            "default": false
          },
          "is_totp_activated": {
            "type": "boolean",
            "title": "Is Totp Activated",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "_id",
          "email",
          "tenant_id",
          "avatar_url",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "user_status",
          "is_deleted",
          "role_id",
          "blob_connection_string",
          "tenant_name"
        ],
        "title": "AuthMeResponse"
      },
      "BaseMessageResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "BaseMessageResponse"
      },
      "BaseStatusResponse": {
        "properties": {
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BaseStatusResponse"
      },
      "BatchFileUploadApiResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "project_type": {
            "type": "string",
            "title": "Project Type"
          },
          "documents": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Template"
                },
                {
                  "$ref": "#/components/schemas/Document"
                }
              ]
            },
            "type": "array",
            "title": "Documents"
          },
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids"
          }
        },
        "type": "object",
        "required": [
          "message",
          "project_type",
          "documents",
          "doc_ids"
        ],
        "title": "BatchFileUploadApiResponse"
      },
      "Body_File_Upload_v1_resource_upload_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          },
          "project_type": {
            "$ref": "#/components/schemas/ProjectEnum"
          },
          "redline_clause_recommendation": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "yes",
                  "no"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Clause Recommendation",
            "default": "no"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "files",
          "project_type"
        ],
        "title": "Body_File_Upload_v1_resource_upload_post"
      },
      "Body_Upload_Template_v1_upload_template_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "project_type": {
            "const": "Document Redraft",
            "title": "Project Type"
          }
        },
        "type": "object",
        "required": [
          "file",
          "project_type"
        ],
        "title": "Body_Upload_Template_v1_upload_template_post"
      },
      "Body_Upload_extract_template_v1_upload_extract_template_post": {
        "properties": {
          "file": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_Upload_extract_template_v1_upload_extract_template_post"
      },
      "ChatModel": {
        "properties": {
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "description": "ChatId"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "UserQuery"
          },
          "action": {
            "type": "string",
            "title": "Action",
            "description": "ActionName"
          }
        },
        "type": "object",
        "required": [
          "conversation_id",
          "query",
          "action"
        ],
        "title": "ChatModel"
      },
      "ClauseResponse": {
        "properties": {
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "default": ""
          },
          "doc_name": {
            "type": "string",
            "title": "Doc Name",
            "default": ""
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause"
          },
          "paragraph": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paragraph"
          }
        },
        "type": "object",
        "required": [
          "clause_name",
          "sub_clause"
        ],
        "title": "ClauseResponse"
      },
      "ContractType": {
        "properties": {
          "models": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Models"
          },
          "model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Model Ids"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "synonyms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Synonyms"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "models",
          "model_ids",
          "name",
          "synonyms"
        ],
        "title": "ContractType"
      },
      "ContractTypeAll": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "Filter",
            "default": ""
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "SortingOrder",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "name",
                  "is_active",
                  "synonyms",
                  "models"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key",
            "description": "SortField",
            "default": "name"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "description": "PageNumber",
            "default": 1
          },
          "need_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Need Pagination",
            "description": "PaginationFlag",
            "default": true
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "title": "ContractTypeAll"
      },
      "ContractTypeCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "ContractTypeName"
          },
          "synonyms": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Synonyms",
            "description": "Synonyms",
            "default": [],
            "unique": true
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "IsActive",
            "default": true
          },
          "model_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Ids",
            "description": "ModelIDs",
            "default": [],
            "unique": true
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ContractTypeCreate"
      },
      "ContractTypeDelete": {
        "properties": {
          "contract_type_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contract Type Ids",
            "description": "ContractTypeIds"
          }
        },
        "type": "object",
        "required": [
          "contract_type_ids"
        ],
        "title": "ContractTypeDelete"
      },
      "ContractTypeListingResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ContractType"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "ContractTypeListingResponse"
      },
      "ContractTypeRead": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "ContractTypeName"
          },
          "fields": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields",
            "description": "ProjectionFields",
            "default": [],
            "unique": true
          },
          "active_contract_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Contract Key",
            "description": "ActiveContractKey"
          }
        },
        "type": "object",
        "title": "ContractTypeRead"
      },
      "ContractTypeResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "synonyms": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Synonyms",
            "default": []
          },
          "model_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Ids",
            "default": []
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "extract": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Extract"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "redline": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Redline"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "draft": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Draft"
              },
              {
                "type": "null"
              }
            ],
            "default": {}
          },
          "redline_assist_prompt_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Assist Prompt Ids",
            "default": []
          },
          "ask_leah_prompt_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ask Leah Prompt Ids",
            "default": []
          },
          "connect_draft": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connect Draft",
            "default": []
          },
          "create_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Time",
            "default": 0
          },
          "last_update_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Update Time",
            "default": 0
          },
          "create_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Uid",
            "default": ""
          },
          "last_update_uid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Update Uid",
            "default": ""
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "title": "ContractTypeResponse"
      },
      "ContractTypeSpecificRedlineModelsResponse": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "default": ""
          },
          "model_name": {
            "type": "string",
            "title": "Model Name",
            "default": ""
          },
          "functions": {
            "items": {
              "$ref": "#/components/schemas/RedlineFunctions"
            },
            "type": "array",
            "title": "Functions"
          }
        },
        "type": "object",
        "required": [
          "functions"
        ],
        "title": "ContractTypeSpecificRedlineModelsResponse"
      },
      "ContractTypeUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "ContractTypeName",
            "default": ""
          },
          "synonyms": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Synonyms",
            "description": "Synonyms",
            "default": [],
            "unique": true
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "IsActive",
            "default": true
          },
          "model_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Ids",
            "description": "ModelIds",
            "default": [],
            "unique": true
          }
        },
        "type": "object",
        "title": "ContractTypeUpdate"
      },
      "CopyDocument": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectID"
          },
          "doc_url": {
            "type": "string",
            "title": "Doc Url",
            "description": "DocUrl"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_url"
        ],
        "title": "CopyDocument"
      },
      "CreateDiscoveryAction": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "FunctionName"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "DisplayName"
          },
          "is_multi_query": {
            "type": "boolean",
            "title": "Is Multi Query",
            "description": "IsMultiQuery"
          },
          "prompt_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Prompt List",
            "description": "PromptList",
            "unique": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "display_name",
          "is_multi_query",
          "prompt_list"
        ],
        "title": "CreateDiscoveryAction"
      },
      "CreateProjectRequest": {
        "properties": {
          "project_name": {
            "type": "string",
            "title": "Project Name",
            "description": "ProjectName"
          },
          "project_type": {
            "type": "string",
            "title": "Project Type",
            "description": "ProjectType"
          },
          "function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Id",
            "description": "FunctionId"
          },
          "user_group_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Group Ids",
            "description": "UserGroupIds"
          }
        },
        "type": "object",
        "required": [
          "project_name",
          "project_type"
        ],
        "title": "CreateProjectRequest"
      },
      "DataPointAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/DataPointsResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "DataPointAllResponse"
      },
      "DataPointResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "data_point": {
            "type": "string",
            "title": "Data Point"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "data_point",
          "description",
          "prompt"
        ],
        "title": "DataPointResponse"
      },
      "DataPointsResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "data_point": {
            "type": "string",
            "title": "Data Point"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "data_point",
          "prompt",
          "description",
          "create_time"
        ],
        "title": "DataPointsResult"
      },
      "DeleteDiscoveryAction": {
        "properties": {
          "discovery_function_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Discovery Function Ids",
            "description": "FunctionIds"
          }
        },
        "type": "object",
        "required": [
          "discovery_function_ids"
        ],
        "title": "DeleteDiscoveryAction"
      },
      "DeleteProjectRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          }
        },
        "type": "object",
        "required": [
          "project_id"
        ],
        "title": "DeleteProjectRequest"
      },
      "DeleteRolesAndPermissionsRequest": {
        "properties": {
          "role_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Role Ids",
            "description": "RolesAndPermissionsIds"
          }
        },
        "type": "object",
        "required": [
          "role_ids"
        ],
        "title": "DeleteRolesAndPermissionsRequest"
      },
      "DeviationRedraftRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "description": "DocId"
          },
          "chat_model": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Model",
            "description": "ChatModel",
            "default": {}
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "CallBackUrl",
            "default": ""
          },
          "representing_party": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Representing Party",
            "description": "CallBackUrl",
            "default": ""
          },
          "create_scorecard_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Scorecard Only",
            "description": "CreateScoreCardFlag",
            "default": false
          },
          "skip_stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Stream",
            "description": "SkipStreamFlag",
            "default": false
          },
          "risk_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Risk Model Id",
            "description": "RiskModelId",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_id"
        ],
        "title": "DeviationRedraftRequest"
      },
      "DiscoveryFunctionAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/DiscoveryFunctionResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "DiscoveryFunctionAllResponse"
      },
      "DiscoveryFunctionResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "default": ""
          },
          "is_multi_query": {
            "type": "boolean",
            "title": "Is Multi Query",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "function_prompt_ids": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Function Prompt Ids",
            "default": []
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted"
        ],
        "title": "DiscoveryFunctionResponse"
      },
      "DiscoveryFunctionResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "default": ""
          },
          "is_multi_query": {
            "type": "boolean",
            "title": "Is Multi Query",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "prompt_list": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Prompt List",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "DiscoveryFunctionResult"
      },
      "DiscoveryMultiQuerySearch": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "description": "DocIds"
          },
          "prompts": {
            "items": {},
            "type": "array",
            "title": "Prompts",
            "description": "Prompts"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "Streaming"
          },
          "is_full_doc": {
            "type": "boolean",
            "title": "Is Full Doc",
            "description": "IsFullDoc"
          },
          "system_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Role",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_ids",
          "prompts",
          "chat_model",
          "stream",
          "is_full_doc"
        ],
        "title": "DiscoveryMultiQuerySearch"
      },
      "DiscoveryPromptChange": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id",
            "description": "PromptId"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "PromptText"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "prompt"
        ],
        "title": "DiscoveryPromptChange"
      },
      "DiscoveryReportGenerationRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "description": "DocIds"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action",
            "default": ""
          },
          "acquirer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acquirer",
            "default": ""
          },
          "target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_ids",
          "chat_model"
        ],
        "title": "DiscoveryReportGenerationRequest"
      },
      "DiscoveryReportGenerationResponse": {
        "properties": {
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "action": {
            "type": "string",
            "title": "Action",
            "default": ""
          },
          "query": {
            "type": "string",
            "title": "Query",
            "default": ""
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "default": ""
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ReportGenerationResult"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "DiscoveryReportGenerationResponse"
      },
      "DiscoverySearch": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "Streaming"
          },
          "is_full_doc": {
            "type": "boolean",
            "title": "Is Full Doc",
            "description": "IsFullDoc"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "default": []
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "default": ""
          },
          "system_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Role",
            "default": ""
          },
          "purpose_memo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose Memo",
            "default": ""
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "chat_model",
          "stream",
          "is_full_doc"
        ],
        "title": "DiscoverySearch"
      },
      "DiscoverySuggestedQuestionsRequest": {
        "properties": {
          "question": {
            "type": "string",
            "title": "Question",
            "description": "Question"
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "description": "Answer"
          },
          "response_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Language",
            "description": "ResponseLanguage"
          }
        },
        "type": "object",
        "required": [
          "question",
          "answer"
        ],
        "title": "DiscoverySuggestedQuestionsRequest"
      },
      "DiscoverySuggestedQuestionsResponse": {
        "properties": {
          "suggested_questions": {
            "items": {},
            "type": "array",
            "title": "Suggested Questions",
            "default": []
          }
        },
        "type": "object",
        "title": "DiscoverySuggestedQuestionsResponse"
      },
      "Document": {
        "properties": {
          "doc_name": {
            "type": "string",
            "title": "Doc Name"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id"
          },
          "doc_url": {
            "type": "string",
            "title": "Doc Url"
          },
          "doc_type": {
            "type": "string",
            "title": "Doc Type"
          }
        },
        "type": "object",
        "required": [
          "doc_name",
          "doc_id",
          "doc_url",
          "doc_type"
        ],
        "title": "Document"
      },
      "DocumentClauseReadResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph"
          },
          "klo": {
            "type": "string",
            "title": "Klo"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "paragraph",
          "klo",
          "sub_clause",
          "summary",
          "create_time"
        ],
        "title": "DocumentClauseReadResponse"
      },
      "DocumentReadResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "doc_url": {
            "type": "string",
            "title": "Doc Url"
          },
          "doc_pdf_url": {
            "type": "string",
            "title": "Doc Pdf Url"
          },
          "executive_summery": {
            "type": "string",
            "title": "Executive Summery"
          },
          "party_metadata": {
            "items": {
              "$ref": "#/components/schemas/PartyInfo"
            },
            "type": "array",
            "title": "Party Metadata"
          },
          "party_information": {
            "type": "string",
            "title": "Party Information"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "doc_url",
          "doc_pdf_url",
          "executive_summery",
          "party_metadata",
          "party_information",
          "create_time"
        ],
        "title": "DocumentReadResponse"
      },
      "DocumentsResubmit": {
        "properties": {
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids",
            "description": "DocumentIds"
          },
          "project_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Type",
            "description": "ProjectType"
          },
          "function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Id",
            "description": "FunctionId"
          }
        },
        "type": "object",
        "required": [
          "doc_ids"
        ],
        "title": "DocumentsResubmit"
      },
      "DownloadExcelFiles": {
        "properties": {
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "description": "ConversationID"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "conversation_id"
        ],
        "title": "DownloadExcelFiles"
      },
      "DownloadFileRequest": {
        "properties": {
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "description": "DocId"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          }
        },
        "type": "object",
        "required": [
          "doc_id",
          "project_id"
        ],
        "title": "DownloadFileRequest"
      },
      "Draft": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "default": ""
          },
          "prompt_mapping": {
            "type": "object",
            "title": "Prompt Mapping",
            "default": {}
          }
        },
        "type": "object",
        "title": "Draft"
      },
      "Extract": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "default": ""
          },
          "prompt_mapping": {
            "type": "object",
            "title": "Prompt Mapping",
            "default": {}
          }
        },
        "type": "object",
        "title": "Extract"
      },
      "ExtractionDataPointCreation": {
        "properties": {
          "data_point": {
            "type": "string",
            "title": "Data Point",
            "description": "DataPoint"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "PromptText"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          }
        },
        "type": "object",
        "required": [
          "data_point",
          "prompt"
        ],
        "title": "ExtractionDataPointCreation"
      },
      "ExtractionDataPointDelete": {
        "properties": {
          "data_point_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Point Ids",
            "description": "DataPointIds"
          }
        },
        "type": "object",
        "required": [
          "data_point_ids"
        ],
        "title": "ExtractionDataPointDelete"
      },
      "ExtractionDataPointUpdate": {
        "properties": {
          "data_point": {
            "type": "string",
            "title": "Data Point",
            "description": "DataPoint"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "data_point",
          "prompt"
        ],
        "title": "ExtractionDataPointUpdate"
      },
      "ExtractionDataPointsList": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "Filter"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "SortOrder",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "data_point",
                  "create_time"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key",
            "description": "SortField",
            "default": "data_point"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "description": "PageNumber",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "RecordLimit",
            "default": 10
          },
          "is_list": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is List",
            "description": "ListingFlag",
            "default": false
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point",
            "description": "CursorPoint"
          }
        },
        "type": "object",
        "required": [
          "filter"
        ],
        "title": "ExtractionDataPointsList"
      },
      "ExtractionFunctionAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ExtractionFunctionAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "ExtractionFunctionAllResponse"
      },
      "ExtractionFunctionAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "is_multi_data_point": {
            "type": "boolean",
            "title": "Is Multi Data Point",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "function_prompt_ids": {
            "items": {},
            "type": "array",
            "title": "Function Prompt Ids",
            "default": []
          },
          "source_file_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source File Id",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "ExtractionFunctionAllResult"
      },
      "ExtractionFunctionCreate": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "FunctionName"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "DisplayName"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "is_multi_data_point": {
            "type": "boolean",
            "title": "Is Multi Data Point",
            "description": "IsMultiDataPoint"
          },
          "prompt_list": {
            "items": {
              "$ref": "#/components/schemas/ExtractionPromptCreate"
            },
            "type": "array",
            "title": "Prompt List",
            "description": "PromptCreate"
          },
          "source_file_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source File Id",
            "description": "SourceFileId"
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "description",
          "is_multi_data_point",
          "prompt_list"
        ],
        "title": "ExtractionFunctionCreate"
      },
      "ExtractionFunctionDelete": {
        "properties": {
          "extraction_function_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Extraction Function Ids",
            "description": "FunctionIds"
          }
        },
        "type": "object",
        "required": [
          "extraction_function_ids"
        ],
        "title": "ExtractionFunctionDelete"
      },
      "ExtractionFunctionList": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter",
            "description": "FilterText"
          },
          "query_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QueryType"
              }
            ],
            "description": "QueryType"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "description": "SortOrder"
          },
          "sort_key": {
            "type": "string",
            "title": "Sort Key",
            "description": "SortKey"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "PageNumber"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit"
          },
          "is_list": {
            "type": "boolean",
            "title": "Is List",
            "description": "IsList"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "query_type",
          "sort_order",
          "sort_key",
          "page_number",
          "limit",
          "is_list"
        ],
        "title": "ExtractionFunctionList"
      },
      "ExtractionFunctionRecordResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "is_multi_data_point": {
            "type": "boolean",
            "title": "Is Multi Data Point",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "prompt_list": {
            "items": {
              "$ref": "#/components/schemas/ExtractionPromptList"
            },
            "type": "array",
            "title": "Prompt List",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "ExtractionFunctionRecordResponse"
      },
      "ExtractionFunctionReportGeneration": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "Project ID"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "default": []
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "Chat Model"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "description": "ExtractionFunctionId"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "chat_model",
          "function_id"
        ],
        "title": "ExtractionFunctionReportGeneration"
      },
      "ExtractionFunctionResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "is_multi_data_point": {
            "type": "boolean",
            "title": "Is Multi Data Point",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "function_prompt_ids": {
            "items": {},
            "type": "array",
            "title": "Function Prompt Ids",
            "default": []
          },
          "source_file_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source File Id",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted"
        ],
        "title": "ExtractionFunctionResponse"
      },
      "ExtractionFunctionUpdate": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "FunctionName"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "DisplayName"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/ExtractionPromptChange"
            },
            "type": "array",
            "title": "Prompts",
            "description": "PromptChanges"
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "display_name",
          "description",
          "prompts"
        ],
        "title": "ExtractionFunctionUpdate"
      },
      "ExtractionPromptChange": {
        "properties": {
          "_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": " Id",
            "description": "PromptId"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "PromptText"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "description": "ClauseName"
          },
          "mapping_variable": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Variable",
            "description": "MappingVariable",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "clause_name"
        ],
        "title": "ExtractionPromptChange"
      },
      "ExtractionPromptCreate": {
        "properties": {
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "description": "ClauseName"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "PromptText"
          },
          "mapping_variable": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Variable",
            "description": "MappingVariable",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "clause_name",
          "prompt"
        ],
        "title": "ExtractionPromptCreate"
      },
      "ExtractionPromptList": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "default": ""
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "default": ""
          },
          "mapping_variable": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Variable",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "ExtractionPromptList"
      },
      "ExtractionUploadResponse": {
        "properties": {
          "source_file_id": {
            "type": "string",
            "title": "Source File Id"
          },
          "mapping_variable": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Mapping Variable"
          }
        },
        "type": "object",
        "required": [
          "source_file_id",
          "mapping_variable"
        ],
        "title": "ExtractionUploadResponse"
      },
      "GenerateOtpRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "UserId"
          },
          "tenant_name": {
            "type": "string",
            "title": "Tenant Name",
            "description": "TenantName"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "tenant_name"
        ],
        "title": "GenerateOtpRequest"
      },
      "GetAllPermissionsResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/GetAllPermissionsResult"
            },
            "type": "array",
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "GetAllPermissionsResponse"
      },
      "GetAllPermissionsResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "title": "GetAllPermissionsResult"
      },
      "GetParsedDataRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectID"
          },
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids",
            "description": "DocIDs"
          },
          "klo_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Klo List",
            "description": "KloList"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_ids",
          "klo_list",
          "chat_model"
        ],
        "title": "GetParsedDataRequest"
      },
      "GetParsedDataResult": {
        "properties": {
          "doc_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Id",
            "default": ""
          },
          "doc_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Name",
            "default": ""
          },
          "answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Answer",
            "default": ""
          },
          "export_excel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Export Excel"
          },
          "is_klo": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Klo"
          }
        },
        "type": "object",
        "title": "GetParsedDataResult"
      },
      "GetProjectsDocumentsRequest": {
        "properties": {
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit",
            "default": 20
          },
          "cursor_point": {
            "type": "string",
            "title": "Cursor Point",
            "description": "CursorPoint"
          }
        },
        "type": "object",
        "required": [
          "cursor_point"
        ],
        "title": "GetProjectsDocumentsRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HelpdeskAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/HelpdeskAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "HelpdeskAllResponse"
      },
      "HelpdeskAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "function_description": {
            "type": "string",
            "title": "Function Description",
            "default": ""
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text",
            "default": ""
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": ""
          },
          "create_user": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create User",
            "default": {}
          },
          "response_language": {
            "type": "string",
            "title": "Response Language",
            "default": ""
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "default": ""
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "default": ""
          },
          "documents": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "is_active"
        ],
        "title": "HelpdeskAllResult"
      },
      "HelpdeskFunctionDelete": {
        "properties": {
          "helpdesk_function_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Helpdesk Function Ids",
            "description": "FunctionIds"
          }
        },
        "type": "object",
        "required": [
          "helpdesk_function_ids"
        ],
        "title": "HelpdeskFunctionDelete"
      },
      "HelpdeskFunctionRequest": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "Name"
          },
          "function_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Description",
            "description": "Description",
            "default": ""
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "description": "PrimaryModel"
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "description": "SecondaryModel"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocIds",
            "default": []
          },
          "help_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Help Text",
            "description": "HelpText",
            "default": ""
          },
          "response_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Language",
            "description": "ResponseLanguage",
            "default": "English"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon",
            "default": ""
          },
          "primary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Model Prompt",
            "description": "PrimaryModePrompt",
            "default": ""
          },
          "secondary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Model Prompt",
            "description": "SecondaryModePrompt",
            "default": ""
          },
          "is_adv_rag": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Adv Rag",
            "description": "FullDocumentSearch",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "primary_model_id",
          "secondary_model_id"
        ],
        "title": "HelpdeskFunctionRequest"
      },
      "HelpdeskQueryRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "description": "FunctionId"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Query"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "llm_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Model Id",
            "description": "LLM-Model"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "function_id",
          "query",
          "chat_model"
        ],
        "title": "HelpdeskQueryRequest"
      },
      "HelpdeskRecordResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "function_description": {
            "type": "string",
            "title": "Function Description",
            "default": ""
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": ""
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "default": ""
          },
          "primary_model_prompt": {
            "type": "string",
            "title": "Primary Model Prompt",
            "default": ""
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "default": ""
          },
          "secondary_model_prompt": {
            "type": "string",
            "title": "Secondary Model Prompt",
            "default": ""
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_full_doc": {
            "type": "boolean",
            "title": "Is Full Doc"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text",
            "default": ""
          },
          "response_language": {
            "type": "string",
            "title": "Response Language",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "is_active",
          "is_full_doc"
        ],
        "title": "HelpdeskRecordResponse"
      },
      "HelpdeskResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "default": ""
          },
          "function_description": {
            "type": "string",
            "title": "Function Description",
            "default": ""
          },
          "icon": {
            "type": "string",
            "title": "Icon",
            "default": ""
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "default": ""
          },
          "primary_model_prompt": {
            "type": "string",
            "title": "Primary Model Prompt",
            "default": ""
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "default": ""
          },
          "secondary_model_prompt": {
            "type": "string",
            "title": "Secondary Model Prompt",
            "default": ""
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_full_doc": {
            "type": "boolean",
            "title": "Is Full Doc"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text",
            "default": ""
          },
          "response_language": {
            "type": "string",
            "title": "Response Language",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "is_active",
          "is_full_doc"
        ],
        "title": "HelpdeskResponse"
      },
      "KloListRequest": {
        "properties": {
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids",
            "description": "DocumentIds"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point",
            "description": "CursorPoint",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit",
            "default": 20
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "SearchTerm"
          }
        },
        "type": "object",
        "required": [
          "doc_ids"
        ],
        "title": "KloListRequest"
      },
      "KloListResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/KloResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "KloListResponse"
      },
      "KloResult": {
        "properties": {
          "klo": {
            "type": "string",
            "title": "Klo",
            "default": ""
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "KloResult"
      },
      "LargeLanguageModelDeleteRequest": {
        "properties": {
          "model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Model Ids"
          }
        },
        "type": "object",
        "required": [
          "model_ids"
        ],
        "title": "LargeLanguageModelDeleteRequest"
      },
      "LargeLanguageModelListingResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "internal_only": {
            "type": "boolean",
            "title": "Internal Only"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "model",
          "alias",
          "internal_only"
        ],
        "title": "LargeLanguageModelListingResponse"
      },
      "LargeLanguageModelReadRequest": {
        "properties": {
          "project_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "LargeLanguageModelReadRequest"
      },
      "LargeLanguageModelRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "max_tokens_op": {
            "type": "integer",
            "title": "Max Tokens Op"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "default": 0
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "internal_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Only",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "model",
          "alias",
          "max_tokens_op",
          "max_tokens"
        ],
        "title": "LargeLanguageModelRequest"
      },
      "LargeLanguageModelResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "max_tokens_op": {
            "type": "integer",
            "title": "Max Tokens Op"
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "internal_only": {
            "type": "boolean",
            "title": "Internal Only",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "model",
          "alias",
          "max_tokens_op",
          "max_tokens",
          "temperature"
        ],
        "title": "LargeLanguageModelResponse"
      },
      "LeahCreateDriveRequest": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "description": "PrimaryModelId"
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "description": "SecondaryModelId"
          },
          "data_point_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Point Ids",
            "description": "DataPointListIds"
          },
          "executive_summary": {
            "type": "string",
            "title": "Executive Summary",
            "description": "ExecutiveSummaryPrompt"
          },
          "summary_model_id": {
            "type": "string",
            "title": "Summary Model Id",
            "description": "SummaryModelId"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocIds"
          },
          "help_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Help Text",
            "description": "HelpText"
          },
          "response_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Language",
            "description": "ResponseLanguage",
            "default": "English"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon"
          },
          "primary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Model Prompt",
            "description": "PrimaryModePrompt"
          },
          "secondary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Model Prompt",
            "description": "SecondaryModePrompt"
          },
          "is_custom_extraction": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Custom Extraction",
            "description": "IsCustomExtraction"
          },
          "redline_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Enabled",
            "description": "RedlineEnabled",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "description",
          "primary_model_id",
          "secondary_model_id",
          "data_point_ids",
          "executive_summary",
          "summary_model_id"
        ],
        "title": "LeahCreateDriveRequest"
      },
      "LeahDriveAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/LeahDriveAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          },
          "total_active_records": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Active Records"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "LeahDriveAllResponse"
      },
      "LeahDriveAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "create_user": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create User",
            "default": {}
          },
          "data_point_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Point Ids",
            "default": []
          },
          "documents": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "function_name",
          "description",
          "is_active",
          "help_text",
          "icon"
        ],
        "title": "LeahDriveAllResult"
      },
      "LeahDriveDelete": {
        "properties": {
          "function_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Function Ids",
            "description": "FunctionIds"
          }
        },
        "type": "object",
        "required": [
          "function_ids"
        ],
        "title": "LeahDriveDelete"
      },
      "LeahDriveDocDelete": {
        "properties": {
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids",
            "description": "DocumentIds"
          }
        },
        "type": "object",
        "required": [
          "doc_ids"
        ],
        "title": "LeahDriveDocDelete"
      },
      "LeahDriveFileResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/LeahDriveFileResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "LeahDriveFileResponse"
      },
      "LeahDriveFileResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "default": ""
          },
          "doc_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Url",
            "default": ""
          },
          "doc_pdf_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Pdf Url",
            "default": ""
          },
          "classification_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classification Status",
            "default": ""
          },
          "pipeline_process_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pipeline Process Status",
            "default": ""
          },
          "pipeline_status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pipeline Status Message",
            "default": ""
          },
          "failure_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Reason",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "LeahDriveFileResult"
      },
      "LeahDriveFilesList": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "create_time",
                  "name"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "sort_key"
        ],
        "title": "LeahDriveFilesList"
      },
      "LeahDriveList": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "Filter"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "function_name",
                  "create_user",
                  "is_active"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "description": "PageNumber",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "default": 10
          },
          "is_list": {
            "type": "boolean",
            "title": "Is List",
            "description": "IsList",
            "default": false
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "IsActive"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "sort_key"
        ],
        "title": "LeahDriveList"
      },
      "LeahDriveRecordResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "primary_model": {
            "type": "string",
            "title": "Primary Model"
          },
          "primary_model_prompt": {
            "type": "string",
            "title": "Primary Model Prompt"
          },
          "secondary_model": {
            "type": "string",
            "title": "Secondary Model"
          },
          "secondary_model_prompt": {
            "type": "string",
            "title": "Secondary Model Prompt"
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_custom_extraction": {
            "type": "boolean",
            "title": "Is Custom Extraction"
          },
          "data_point_ids": {
            "items": {},
            "type": "array",
            "title": "Data Point Ids"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text"
          },
          "response_language": {
            "type": "string",
            "title": "Response Language"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "function_name",
          "description",
          "icon",
          "primary_model",
          "primary_model_prompt",
          "secondary_model",
          "secondary_model_prompt",
          "doc_ids",
          "is_active",
          "is_custom_extraction",
          "data_point_ids",
          "help_text",
          "response_language"
        ],
        "title": "LeahDriveRecordResponse"
      },
      "LeahDriveRequest": {
        "properties": {
          "function_name": {
            "type": "string",
            "title": "Function Name",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "primary_model_id": {
            "type": "string",
            "title": "Primary Model Id",
            "description": "PrimaryModelId"
          },
          "secondary_model_id": {
            "type": "string",
            "title": "Secondary Model Id",
            "description": "SecondaryModelId"
          },
          "data_point_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Point Ids",
            "description": "DataPointListIds"
          },
          "executive_summary": {
            "type": "string",
            "title": "Executive Summary",
            "description": "ExecutiveSummaryPrompt"
          },
          "summary_model_id": {
            "type": "string",
            "title": "Summary Model Id",
            "description": "SummaryModelId"
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocIds"
          },
          "help_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Help Text",
            "description": "HelpText"
          },
          "response_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Language",
            "description": "ResponseLanguage",
            "default": "English"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon"
          },
          "primary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary Model Prompt",
            "description": "PrimaryModePrompt"
          },
          "secondary_model_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secondary Model Prompt",
            "description": "SecondaryModePrompt"
          },
          "is_custom_extraction": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Custom Extraction",
            "description": "IsCustomExtraction"
          }
        },
        "type": "object",
        "required": [
          "function_name",
          "description",
          "primary_model_id",
          "secondary_model_id",
          "data_point_ids",
          "executive_summary",
          "summary_model_id"
        ],
        "title": "LeahDriveRequest"
      },
      "LeahDriveResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "primary_model": {
            "type": "string",
            "title": "Primary Model"
          },
          "primary_model_prompt": {
            "type": "string",
            "title": "Primary Model Prompt"
          },
          "secondary_model": {
            "type": "string",
            "title": "Secondary Model"
          },
          "secondary_model_prompt": {
            "type": "string",
            "title": "Secondary Model Prompt"
          },
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_custom_extraction": {
            "type": "boolean",
            "title": "Is Custom Extraction"
          },
          "data_point_ids": {
            "items": {},
            "type": "array",
            "title": "Data Point Ids"
          },
          "help_text": {
            "type": "string",
            "title": "Help Text"
          },
          "response_language": {
            "type": "string",
            "title": "Response Language"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "function_name",
          "description",
          "icon",
          "primary_model",
          "primary_model_prompt",
          "secondary_model",
          "secondary_model_prompt",
          "doc_ids",
          "is_active",
          "is_custom_extraction",
          "data_point_ids",
          "help_text",
          "response_language"
        ],
        "title": "LeahDriveResponse"
      },
      "LeahRecommendationTypeResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "LeahRecommendationTypeResponse"
      },
      "ListAllDiscoveryAction": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter",
            "description": "Filter"
          },
          "query_type": {
            "$ref": "#/components/schemas/QueryType"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "description": "SortingOrder"
          },
          "sort_key": {
            "type": "string",
            "title": "Sort Key",
            "description": "SortField"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "PageNumber"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit"
          },
          "is_list": {
            "type": "boolean",
            "title": "Is List"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "query_type",
          "sort_order",
          "sort_key",
          "page_number",
          "limit",
          "is_list"
        ],
        "title": "ListAllDiscoveryAction"
      },
      "ListAllHelpdeskFunction": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "is_active",
                  "function_name",
                  "documents"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "default": 10
          },
          "is_list": {
            "type": "boolean",
            "title": "Is List",
            "description": "IsList",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "sort_key"
        ],
        "title": "ListAllHelpdeskFunction"
      },
      "ListContractTypeSpecificRedlineModels": {
        "properties": {
          "contract_type_id": {
            "type": "string",
            "title": "Contract Type Id",
            "description": "ContractTypeId"
          }
        },
        "type": "object",
        "required": [
          "contract_type_id"
        ],
        "title": "ListContractTypeSpecificRedlineModels"
      },
      "ListRolesAndPermissionsRequest": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "Filter"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer",
                "enum": [
                  1,
                  -1
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": -1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "name",
                  "users",
                  "description",
                  "last_update_time"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "description": "PageNumber",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "sort_key"
        ],
        "title": "ListRolesAndPermissionsRequest"
      },
      "LoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "UserName"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Password"
          },
          "tenant": {
            "type": "string",
            "title": "Tenant",
            "description": "Tenant"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "tenant"
        ],
        "title": "LoginRequest"
      },
      "LoginResponse": {
        "properties": {
          "access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "totp_device_status": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Totp Device Status"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "LoginResponse"
      },
      "MfaGenerateOtpResponse": {
        "properties": {
          "otp_auth_url": {
            "type": "string",
            "title": "Otp Auth Url"
          },
          "otp_base32": {
            "type": "string",
            "title": "Otp Base32"
          }
        },
        "type": "object",
        "required": [
          "otp_auth_url",
          "otp_base32"
        ],
        "title": "MfaGenerateOtpResponse"
      },
      "MfaToggleActionResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "message",
          "status"
        ],
        "title": "MfaToggleActionResponse"
      },
      "OtpVerifyRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "UserId"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "AuthenticatorOtp"
          },
          "tenant": {
            "type": "string",
            "title": "Tenant",
            "description": "TenantName"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "token",
          "tenant"
        ],
        "title": "OtpVerifyRequest"
      },
      "ParseAllDataRequest": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "ProjectId"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter",
            "description": "TextSearch"
          },
          "contract_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Types",
            "description": "ContractTypes",
            "default": []
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point",
            "description": "NextPage"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "RecordLimit",
            "default": 50
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocumentIds",
            "default": [],
            "unique": true
          }
        },
        "type": "object",
        "title": "ParseAllDataRequest"
      },
      "ParseAllDataResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ParseData"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          },
          "contract_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Contract Types"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/ProjectDocument"
            },
            "type": "array",
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "result",
          "contract_types",
          "documents"
        ],
        "title": "ParseAllDataResponse"
      },
      "ParseData": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "doc_id": {
            "items": {},
            "type": "array",
            "title": "Doc Id",
            "default": []
          },
          "doc_name": {
            "items": {},
            "type": "array",
            "title": "Doc Name",
            "default": []
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "contract_type": {
            "items": {},
            "type": "array",
            "title": "Contract Type",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "ParseData"
      },
      "PartyInfo": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location"
          },
          "party_name": {
            "type": "string",
            "title": "Party Name"
          },
          "reference": {
            "type": "string",
            "title": "Reference"
          },
          "role_of_party_in_contract": {
            "type": "string",
            "title": "Role Of Party In Contract"
          }
        },
        "type": "object",
        "required": [
          "location",
          "party_name",
          "reference",
          "role_of_party_in_contract"
        ],
        "title": "PartyInfo"
      },
      "PartyMetaData": {
        "properties": {
          "location": {
            "type": "string",
            "title": "Location",
            "default": ""
          },
          "party_name": {
            "type": "string",
            "title": "Party Name"
          },
          "reference": {
            "type": "string",
            "title": "Reference"
          },
          "role_of_party_in_contract": {
            "type": "string",
            "title": "Role Of Party In Contract",
            "default": ""
          },
          "party_type": {
            "items": {},
            "type": "array",
            "title": "Party Type"
          },
          "redline_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Model",
            "default": ""
          },
          "redline_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Model Id",
            "default": ""
          },
          "redline_model_reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Model Reasoning",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "party_name",
          "reference",
          "party_type"
        ],
        "title": "PartyMetaData"
      },
      "Permissions": {
        "properties": {
          "projects": {
            "type": "object",
            "title": "Projects"
          },
          "users": {
            "type": "object",
            "title": "Users"
          },
          "roles": {
            "type": "object",
            "title": "Roles"
          },
          "user_groups": {
            "type": "object",
            "title": "User Groups"
          },
          "master_rules": {
            "type": "object",
            "title": "Master Rules"
          },
          "contract_types": {
            "type": "object",
            "title": "Contract Types"
          },
          "templates": {
            "type": "object",
            "title": "Templates"
          },
          "risk_categories": {
            "type": "object",
            "title": "Risk Categories"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "users",
          "roles",
          "user_groups",
          "master_rules",
          "contract_types",
          "templates",
          "risk_categories"
        ],
        "title": "Permissions"
      },
      "PermissionsAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/PermissionsAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "PermissionsAllResponse"
      },
      "PermissionsAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name",
          "description"
        ],
        "title": "PermissionsAllResult"
      },
      "PermissionsResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "is_super_admin": {
            "type": "boolean",
            "title": "Is Super Admin",
            "default": false
          },
          "permissions": {
            "$ref": "#/components/schemas/Permissions"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "name",
          "permissions"
        ],
        "title": "PermissionsResponse"
      },
      "PinProjectRequest": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "ProjectId",
            "default": ""
          },
          "pin": {
            "type": "boolean",
            "title": "Pin",
            "description": "Pin"
          }
        },
        "type": "object",
        "required": [
          "pin"
        ],
        "title": "PinProjectRequest"
      },
      "ProjectAllDocumentsResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ProjectAllDocumentsResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "ProjectAllDocumentsResponse"
      },
      "ProjectAllDocumentsResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "default": ""
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "default": ""
          },
          "contract_type": {
            "type": "string",
            "title": "Contract Type",
            "default": ""
          },
          "contract_type_id": {
            "type": "string",
            "title": "Contract Type Id",
            "default": ""
          },
          "doc_url": {
            "type": "string",
            "title": "Doc Url"
          },
          "classification_status": {
            "type": "string",
            "title": "Classification Status",
            "default": ""
          },
          "pipeline_process_status": {
            "type": "string",
            "title": "Pipeline Process Status",
            "default": ""
          },
          "redraft_status": {
            "type": "string",
            "title": "Redraft Status",
            "default": ""
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "party_information": {
            "type": "string",
            "title": "Party Information"
          },
          "party_metadata": {
            "items": {
              "$ref": "#/components/schemas/PartyMetaData"
            },
            "type": "array",
            "title": "Party Metadata",
            "default": []
          },
          "purpose_of_contract": {
            "type": "string",
            "title": "Purpose Of Contract"
          },
          "governing_law": {
            "type": "string",
            "title": "Governing Law"
          },
          "page_count": {
            "type": "integer",
            "title": "Page Count"
          },
          "template_party_json_text": {
            "type": "string",
            "title": "Template Party Json Text",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "name",
          "doc_url",
          "title",
          "party_information",
          "purpose_of_contract",
          "governing_law",
          "page_count"
        ],
        "title": "ProjectAllDocumentsResult"
      },
      "ProjectAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ProjectAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          },
          "pinned_projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectAllResult"
            },
            "type": "array",
            "title": "Pinned Projects"
          }
        },
        "type": "object",
        "required": [
          "result",
          "pinned_projects"
        ],
        "title": "ProjectAllResponse"
      },
      "ProjectAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "project_type": {
            "type": "string",
            "title": "Project Type"
          },
          "pinned": {
            "type": "boolean",
            "title": "Pinned"
          },
          "user_group_ids": {
            "items": {},
            "type": "array",
            "title": "User Group Ids",
            "default": []
          },
          "qdrant_point_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qdrant Point Ids",
            "default": []
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "project_name",
          "project_type",
          "pinned"
        ],
        "title": "ProjectAllResult"
      },
      "ProjectDocument": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name"
        ],
        "title": "ProjectDocument"
      },
      "ProjectEnum": {
        "type": "string",
        "enum": [
          "Document Drafting",
          "Document Review",
          "Document Redraft",
          "Document Extraction",
          "Document Discovery",
          "Playbook Builder",
          "Leah Guidance",
          "Play Ground",
          "Leah Helpdesk",
          "Leah Drive",
          "Document Deal",
          "Document Claim"
        ],
        "title": "ProjectEnum",
        "description": "ProjectTypes Enum"
      },
      "ProjectPinResponse": {
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          },
          "pinned": {
            "type": "boolean",
            "title": "Pinned"
          }
        },
        "type": "object",
        "required": [
          "result",
          "pinned"
        ],
        "title": "ProjectPinResponse"
      },
      "ProjectRecordResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ProjectRecordResult"
            },
            "type": "array",
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "ProjectRecordResponse"
      },
      "ProjectRecordResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "project_type": {
            "type": "string",
            "title": "Project Type"
          },
          "pinned": {
            "type": "boolean",
            "title": "Pinned"
          },
          "user_group_ids": {
            "items": {},
            "type": "array",
            "title": "User Group Ids",
            "default": []
          },
          "qdrant_point_ids": {
            "items": {},
            "type": "array",
            "title": "Qdrant Point Ids",
            "default": []
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "default": ""
          },
          "documents": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "project_name",
          "project_type",
          "pinned"
        ],
        "title": "ProjectRecordResult"
      },
      "ProjectResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "project_type": {
            "type": "string",
            "title": "Project Type"
          },
          "pinned": {
            "type": "boolean",
            "title": "Pinned"
          },
          "user_group_ids": {
            "items": {},
            "type": "array",
            "title": "User Group Ids",
            "default": []
          },
          "qdrant_point_ids": {
            "items": {},
            "type": "array",
            "title": "Qdrant Point Ids",
            "default": []
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "project_name",
          "project_type",
          "pinned"
        ],
        "title": "ProjectResponse"
      },
      "PromptListRequest": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page",
            "description": "PageNumber",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit",
            "default": 10
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "default": -1
          },
          "sort_key": {
            "type": "string",
            "title": "Sort Key",
            "default": "prompt_name"
          }
        },
        "type": "object",
        "required": [
          "filter"
        ],
        "title": "PromptListRequest",
        "description": "PromptListRequest"
      },
      "PromptPaginationResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/PromptResponse"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "PromptPaginationResponse",
        "description": "PromptCursorPointResponse"
      },
      "PromptResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name",
            "default": ""
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "default": ""
          },
          "prompt_key": {
            "type": "string",
            "title": "Prompt Key",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "PromptResponse",
        "description": "PromptUpdateResponse"
      },
      "PromptUpdateRequest": {
        "properties": {
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "prompt_name",
          "prompt",
          "description"
        ],
        "title": "PromptUpdateRequest",
        "description": "PromptUpdateRequest"
      },
      "QueryResultAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/QueryResultResponse"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "QueryResultAllResponse"
      },
      "QueryResultRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point",
            "description": "CursorPoint",
            "default": 0
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "description": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "title": "QueryResultRequest"
      },
      "QueryResultResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "actual_conversation_id": {
            "type": "string",
            "title": "Actual Conversation Id"
          },
          "is_exported": {
            "type": "boolean",
            "title": "Is Exported"
          },
          "save_discovery": {
            "type": "boolean",
            "title": "Save Discovery"
          },
          "azure_redraft_file_path": {
            "type": "string",
            "title": "Azure Redraft File Path"
          },
          "azure_draft_file_path": {
            "type": "string",
            "title": "Azure Draft File Path"
          },
          "azure_extraction_file_paths": {
            "items": {},
            "type": "array",
            "title": "Azure Extraction File Paths"
          },
          "is_discovery": {
            "type": "boolean",
            "title": "Is Discovery"
          },
          "saved_redline_result": {
            "type": "object",
            "title": "Saved Redline Result"
          },
          "analysis_report": {
            "type": "object",
            "title": "Analysis Report"
          },
          "redline_score": {
            "type": "object",
            "title": "Redline Score"
          },
          "exported_name": {
            "type": "string",
            "title": "Exported Name"
          },
          "azure_playbook_file_path": {
            "type": "string",
            "title": "Azure Playbook File Path"
          },
          "is_multi_query": {
            "type": "boolean",
            "title": "Is Multi Query"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "function_type": {
            "type": "string",
            "title": "Function Type"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "project_id",
          "doc_ids",
          "action",
          "results",
          "conversation_id",
          "actual_conversation_id",
          "is_exported",
          "save_discovery",
          "azure_redraft_file_path",
          "azure_draft_file_path",
          "azure_extraction_file_paths",
          "is_discovery",
          "saved_redline_result",
          "analysis_report",
          "redline_score",
          "exported_name",
          "azure_playbook_file_path",
          "is_multi_query",
          "function_id",
          "function_type",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid"
        ],
        "title": "QueryResultResponse"
      },
      "QueryType": {
        "type": "string",
        "enum": [
          "single",
          "multi",
          "all"
        ],
        "title": "QueryType"
      },
      "Redline": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "default": ""
          },
          "prompt_mapping": {
            "type": "object",
            "title": "Prompt Mapping",
            "default": {}
          }
        },
        "type": "object",
        "title": "Redline"
      },
      "RedlineAssist": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "description": "DocId"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "description": "ConversationId"
          },
          "prompt_id": {
            "type": "string",
            "title": "Prompt Id",
            "description": "PromptId"
          },
          "klo_text": {
            "type": "string",
            "title": "Klo Text",
            "description": "KloText"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_id",
          "conversation_id",
          "prompt_id",
          "klo_text"
        ],
        "title": "RedlineAssist"
      },
      "RedlineAssistResponse": {
        "properties": {
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action",
            "default": ""
          },
          "query": {
            "type": "string",
            "title": "Query",
            "default": ""
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "default": ""
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/RedlineAssistResult"
            },
            "type": "array",
            "title": "Results",
            "default": []
          }
        },
        "type": "object",
        "title": "RedlineAssistResponse"
      },
      "RedlineAssistResult": {
        "properties": {
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "default": ""
          },
          "llm_time": {
            "type": "integer",
            "title": "Llm Time",
            "default": 1
          }
        },
        "type": "object",
        "title": "RedlineAssistResult"
      },
      "RedlineClauseActionRequest": {
        "properties": {
          "clause_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Clause Ids"
          }
        },
        "type": "object",
        "required": [
          "clause_ids"
        ],
        "title": "RedlineClauseActionRequest"
      },
      "RedlineClauseCreateRequest": {
        "properties": {
          "_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": " Id"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "description": "Clause"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause",
            "description": "SubClause"
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph",
            "description": "Paragraph"
          },
          "fallback": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fallback",
            "description": "FallBackText",
            "default": []
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "IsActive",
            "default": true
          },
          "redline_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Function Id",
            "description": "RedlineFunctionId"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "description": "TemplateId"
          }
        },
        "type": "object",
        "required": [
          "clause_name",
          "sub_clause",
          "paragraph",
          "template_id"
        ],
        "title": "RedlineClauseCreateRequest"
      },
      "RedlineClauseDataRequest": {
        "properties": {
          "_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": " Id"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "description": "Clause"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause",
            "description": "SubClause"
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph",
            "description": "Paragraph"
          },
          "fallback": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fallback",
            "description": "FallBackText",
            "default": []
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "IsActive",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "clause_name",
          "sub_clause",
          "paragraph"
        ],
        "title": "RedlineClauseDataRequest"
      },
      "RedlineClauseListResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/RedlineClauseReadResponse"
            },
            "type": "array",
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "RedlineClauseListResponse"
      },
      "RedlineClauseReadRequest": {
        "properties": {
          "redline_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Function Id",
            "description": "RedlineFunctionId"
          },
          "clause_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clause Name",
            "description": "ClauseName"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id",
            "description": "TemplateId"
          },
          "is_filter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Filter",
            "description": "IsItForFilteringOrNot",
            "default": false
          }
        },
        "type": "object",
        "title": "RedlineClauseReadRequest"
      },
      "RedlineClauseReadResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause"
          },
          "template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Id"
          },
          "paragraph": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paragraph"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "redline_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Function Id"
          },
          "fallback": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fallback",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "clause_name",
          "sub_clause"
        ],
        "title": "RedlineClauseReadResponse"
      },
      "RedlineClauseResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name"
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause"
          },
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "redline_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Function Id",
            "default": ""
          },
          "fallback": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fallback",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "clause_name",
          "sub_clause",
          "template_id",
          "paragraph",
          "is_active"
        ],
        "title": "RedlineClauseResponse"
      },
      "RedlineDocumentsListResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "doc_type": {
            "type": "string",
            "title": "Doc Type",
            "default": ""
          },
          "classification_status": {
            "type": "string",
            "title": "Classification Status",
            "default": ""
          },
          "pipeline_process_status": {
            "type": "string",
            "title": "Pipeline Process Status",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "RedlineDocumentsListResponse"
      },
      "RedlineExtractedClauseEntry": {
        "properties": {
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "default": ""
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause",
            "default": ""
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph",
            "default": ""
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "default": ""
          },
          "doc_name": {
            "type": "string",
            "title": "Doc Name",
            "default": ""
          },
          "justification": {
            "type": "string",
            "title": "Justification",
            "default": ""
          }
        },
        "type": "object",
        "title": "RedlineExtractedClauseEntry"
      },
      "RedlineExtractedClauseResponse": {
        "properties": {
          "recommendation_list": {
            "items": {
              "$ref": "#/components/schemas/RedlineExtractedClauseEntry"
            },
            "type": "array",
            "title": "Recommendation List"
          }
        },
        "type": "object",
        "required": [
          "recommendation_list"
        ],
        "title": "RedlineExtractedClauseResponse"
      },
      "RedlineFunctionDuplicateCheck": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "RedlineFunctionName"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RedlineFunctionDuplicateCheck"
      },
      "RedlineFunctionDuplicateCheckResponse": {
        "properties": {
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RedlineFunctionDuplicateCheckResponse"
      },
      "RedlineFunctionListRequest": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "redline_models": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Models"
          },
          "framework": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Framework"
          },
          "include_rules": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Rules"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": 1
          },
          "sort_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Key",
            "default": "_id"
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "default": 1
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit",
            "default": 20
          }
        },
        "type": "object",
        "title": "RedlineFunctionListRequest"
      },
      "RedlineFunctionListResponse": {
        "properties": {
          "result": {
            "items": {},
            "type": "array",
            "title": "Result"
          },
          "record_count": {
            "type": "integer",
            "title": "Record Count"
          },
          "total_record": {
            "type": "integer",
            "title": "Total Record"
          },
          "next_page": {
            "type": "integer",
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result",
          "record_count",
          "total_record",
          "next_page"
        ],
        "title": "RedlineFunctionListResponse"
      },
      "RedlineFunctions": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "default": ""
          },
          "framework": {
            "type": "string",
            "title": "Framework",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "RedlineFunctions"
      },
      "RedlineKnowledgeBaseTriggerRequest": {
        "properties": {
          "redline_function_id": {
            "type": "string",
            "title": "Redline Function Id",
            "description": "RedlineFunctionId"
          },
          "doc_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Doc Ids",
            "description": "DocIds"
          }
        },
        "type": "object",
        "required": [
          "redline_function_id",
          "doc_ids"
        ],
        "title": "RedlineKnowledgeBaseTriggerRequest"
      },
      "RedlinePrompt": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "project_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Type"
          },
          "action_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Name"
          },
          "llm_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Type"
          },
          "prompt_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Name"
          },
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Deleted"
          },
          "llm_temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Temperature"
          },
          "response_for_one_shot": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response For One Shot"
          },
          "response_for_stream": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response For Stream"
          },
          "chunk_token_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chunk Token Size"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "prompt_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Key"
          },
          "is_system": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is System"
          },
          "max_tokens_op": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens Op"
          },
          "system_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "System Role"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "RedlinePrompt"
      },
      "RedlinePromptResponse": {
        "properties": {
          "redline_prompts": {
            "items": {
              "$ref": "#/components/schemas/RedlinePrompt"
            },
            "type": "array",
            "title": "Redline Prompts"
          }
        },
        "type": "object",
        "required": [
          "redline_prompts"
        ],
        "title": "RedlinePromptResponse"
      },
      "RedlineRecommendedClauseActionRequest": {
        "properties": {
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause",
            "description": "Sub_Clause"
          },
          "redline_function_id": {
            "type": "string",
            "title": "Redline Function Id",
            "description": "RedlineFunction"
          },
          "recommendation_type_id": {
            "type": "string",
            "title": "Recommendation Type Id",
            "description": "LeahRecommendationId"
          }
        },
        "type": "object",
        "required": [
          "sub_clause",
          "redline_function_id",
          "recommendation_type_id"
        ],
        "title": "RedlineRecommendedClauseActionRequest"
      },
      "RedlineRecommendedClauseCursorPointResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/ClauseResponse"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "cursor_point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor Point"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "RedlineRecommendedClauseCursorPointResponse"
      },
      "RedlineRecommendedClauseListRequest": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter",
            "description": "ClauseName",
            "default": ""
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit",
            "default": 10
          },
          "cursor_point": {
            "type": "integer",
            "title": "Cursor Point",
            "description": "Cursor",
            "default": 0
          }
        },
        "type": "object",
        "title": "RedlineRecommendedClauseListRequest"
      },
      "RedlineUpdateClauseRequest": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "description": "TemplateId"
          },
          "redline_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Function Id",
            "description": "RedlineFunctionId",
            "default": ""
          },
          "clauses": {
            "items": {
              "$ref": "#/components/schemas/RedlineClauseDataRequest"
            },
            "type": "array",
            "title": "Clauses",
            "description": "Clauses"
          }
        },
        "type": "object",
        "required": [
          "template_id",
          "clauses"
        ],
        "title": "RedlineUpdateClauseRequest"
      },
      "ReportGenerationResult": {
        "properties": {
          "doc_ids": {
            "items": {},
            "type": "array",
            "title": "Doc Ids",
            "default": []
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "default": ""
          },
          "llm_time": {
            "type": "integer",
            "title": "Llm Time",
            "default": 0
          }
        },
        "type": "object",
        "title": "ReportGenerationResult"
      },
      "ResetMfaRequest": {
        "properties": {
          "user_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "User Ids",
            "description": "UserIds"
          }
        },
        "type": "object",
        "required": [
          "user_ids"
        ],
        "title": "ResetMfaRequest"
      },
      "RolesAndPermissionsRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "permissions": {
            "type": "object",
            "title": "Permissions",
            "description": "Permissions"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "title": "RolesAndPermissionsRequest"
      },
      "SSOAvailableIntegrationResponse": {
        "properties": {
          "result": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "SSOAvailableIntegrationResponse"
      },
      "SSOProviderChange": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "provider": {
            "type": "string",
            "enum": [
              "okta",
              "microsoft",
              "google"
            ],
            "title": "Provider"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "ClientID"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "ClientSecret"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Domain",
            "default": ""
          },
          "tenant": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant",
            "description": "TenantID",
            "default": ""
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "DefaultProvider",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "client_id",
          "client_secret"
        ],
        "title": "SSOProviderChange"
      },
      "SSOProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "provider": {
            "type": "string",
            "enum": [
              "okta",
              "microsoft",
              "google"
            ],
            "title": "Provider"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "ClientID"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "ClientSecret"
          },
          "tenant": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant",
            "description": "TenantID"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Domain"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "DefaultProvider",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "client_id",
          "client_secret"
        ],
        "title": "SSOProviderCreate"
      },
      "SSOProviderDelete": {
        "properties": {
          "provider_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Provider Ids",
            "description": "SSOProviderIDs"
          }
        },
        "type": "object",
        "required": [
          "provider_ids"
        ],
        "title": "SSOProviderDelete"
      },
      "SSOProviderDeleteResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "message",
          "status"
        ],
        "title": "SSOProviderDeleteResponse"
      },
      "SSOProviderList": {
        "properties": {
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "default": 1
          },
          "sort_key": {
            "type": "string",
            "title": "Sort Key",
            "default": "name"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "default": 1
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 20
          },
          "is_list": {
            "type": "boolean",
            "title": "Is List",
            "default": false
          }
        },
        "type": "object",
        "title": "SSOProviderList"
      },
      "SSOProviderListResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/SSOProviderRecordResponse"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "SSOProviderListResponse"
      },
      "SSOProviderRecordResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "tenant": {
            "type": "string",
            "title": "Tenant",
            "default": ""
          },
          "domain": {
            "type": "string",
            "title": "Domain",
            "default": ""
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": false
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name",
          "provider",
          "client_id",
          "client_secret",
          "last_update_time"
        ],
        "title": "SSOProviderRecordResponse"
      },
      "SSOProviderToggleAction": {
        "properties": {
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id",
            "description": "ProviderID"
          },
          "source": {
            "type": "string",
            "enum": [
              "provider",
              "tenant"
            ],
            "title": "Source",
            "description": "Source",
            "default": "provider"
          }
        },
        "type": "object",
        "title": "SSOProviderToggleAction"
      },
      "SSOProviderToggleActionResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "status": {
            "type": "boolean",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "message",
          "status"
        ],
        "title": "SSOProviderToggleActionResponse"
      },
      "SavedRedlineRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_id",
          "conversation_id"
        ],
        "title": "SavedRedlineRequest"
      },
      "SavedRedlineResponse": {
        "properties": {
          "saved_redline": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Saved Redline"
          },
          "analysis_report": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Report"
          },
          "redline_score": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Score"
          }
        },
        "type": "object",
        "title": "SavedRedlineResponse"
      },
      "SecurityPayloadRequest": {
        "properties": {
          "resources": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Resources",
            "description": "Resources"
          }
        },
        "type": "object",
        "required": [
          "resources"
        ],
        "title": "SecurityPayloadRequest"
      },
      "StreamRedraftRemediationRequest": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id",
            "description": "DocId"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id",
            "description": "FunctionId"
          },
          "is_redraft": {
            "type": "boolean",
            "title": "Is Redraft",
            "description": "IsRedraftFlag"
          },
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "dynamic_field": {
            "type": "string",
            "title": "Dynamic Field",
            "description": "DynamicField"
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "CallBackUrl",
            "default": ""
          },
          "create_scorecard_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Create Scorecard Only",
            "description": "CreateScoreCardFlag",
            "default": false
          },
          "skip_stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Stream",
            "description": "SkipStreamFlag",
            "default": false
          },
          "risk_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Risk Model Id",
            "description": "RiskModelId",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "doc_id",
          "function_id",
          "is_redraft",
          "chat_model",
          "dynamic_field"
        ],
        "title": "StreamRedraftRemediationRequest"
      },
      "Template": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "doc_id": {
            "type": "string",
            "title": "Doc Id"
          },
          "doc_name": {
            "type": "string",
            "title": "Doc Name"
          },
          "doc_url": {
            "type": "string",
            "title": "Doc Url"
          },
          "doc_type": {
            "type": "string",
            "title": "Doc Type"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "doc_id",
          "doc_name",
          "doc_url",
          "doc_type"
        ],
        "title": "Template"
      },
      "TemplateClauseMappingRequest": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "representing_party_name": {
            "type": "string",
            "title": "Representing Party Name"
          }
        },
        "type": "object",
        "required": [
          "template_id",
          "representing_party_name"
        ],
        "title": "TemplateClauseMappingRequest"
      },
      "TemplateClausesResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "clause_name": {
            "type": "string",
            "title": "Clause Name",
            "default": ""
          },
          "sub_clause": {
            "type": "string",
            "title": "Sub Clause",
            "default": ""
          },
          "paragraph": {
            "type": "string",
            "title": "Paragraph",
            "default": ""
          },
          "template_id": {
            "type": "string",
            "title": "Template Id",
            "default": ""
          },
          "redline_function_id": {
            "type": "string",
            "title": "Redline Function Id",
            "default": ""
          },
          "fallback": {
            "items": {},
            "type": "array",
            "title": "Fallback",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id"
        ],
        "title": "TemplateClausesResponse"
      },
      "TemplateExtractRuleRequest": {
        "properties": {
          "doc_id": {
            "type": "string",
            "title": "Doc Id"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "party_role": {
            "type": "string",
            "title": "Party Role"
          }
        },
        "type": "object",
        "required": [
          "doc_id",
          "model_id",
          "party_role"
        ],
        "title": "TemplateExtractRuleRequest"
      },
      "TemplateExtractRuleResponse": {
        "properties": {
          "template_id": {
            "type": "string",
            "title": "Template Id"
          },
          "rule_processing_status": {
            "type": "string",
            "title": "Rule Processing Status"
          }
        },
        "type": "object",
        "required": [
          "template_id",
          "rule_processing_status"
        ],
        "title": "TemplateExtractRuleResponse"
      },
      "ToggleAction": {
        "properties": {
          "function_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Function Ids",
            "description": "FunctionIds"
          }
        },
        "type": "object",
        "required": [
          "function_ids"
        ],
        "title": "ToggleAction"
      },
      "UpdateDiscoveryAction": {
        "properties": {
          "function_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Name",
            "description": "FunctionName",
            "default": ""
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "DisplayName",
            "default": ""
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/DiscoveryPromptChange"
            },
            "type": "array",
            "title": "Prompts",
            "description": "PromptChanges"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "prompts"
        ],
        "title": "UpdateDiscoveryAction"
      },
      "UpdateProjectRequest": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id",
            "description": "ProjectId",
            "default": ""
          },
          "project_name": {
            "type": "string",
            "title": "Project Name",
            "description": "ProjectName"
          },
          "function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Function Id",
            "description": "FunctionId",
            "default": ""
          },
          "user_group_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Group Ids",
            "description": "UserGroupIds",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "project_name"
        ],
        "title": "UpdateProjectRequest"
      },
      "UpdateTenantPermissionResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "project_db": {
            "type": "string",
            "title": "Project Db"
          },
          "blob_connection_string": {
            "type": "string",
            "title": "Blob Connection String"
          },
          "permissions": {
            "type": "object",
            "title": "Permissions"
          },
          "assistant_id": {
            "type": "string",
            "title": "Assistant Id"
          },
          "service_bus_queue": {
            "type": "string",
            "title": "Service Bus Queue"
          },
          "configurations": {
            "type": "object",
            "title": "Configurations"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "name",
          "email",
          "project_db",
          "blob_connection_string",
          "permissions",
          "assistant_id",
          "service_bus_queue",
          "configurations"
        ],
        "title": "UpdateTenantPermissionResponse"
      },
      "UserGroupsAllResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/UserGroupsAllResult"
            },
            "type": "array",
            "title": "Result"
          },
          "total_record": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Record"
          },
          "record_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Count"
          },
          "next_page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "UserGroupsAllResponse"
      },
      "UserGroupsAllResult": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name",
          "description"
        ],
        "title": "UserGroupsAllResult"
      },
      "UserGroupsCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids",
            "description": "UserIds",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "UserGroupsCreate"
      },
      "UserGroupsDelete": {
        "properties": {
          "group_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Group Ids",
            "description": "UserGroupsIds"
          }
        },
        "type": "object",
        "required": [
          "group_ids"
        ],
        "title": "UserGroupsDelete"
      },
      "UserGroupsList": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter",
            "description": "Filter"
          },
          "sort_order": {
            "type": "integer",
            "title": "Sort Order",
            "description": "SortOrder"
          },
          "sort_key": {
            "type": "string",
            "title": "Sort Key",
            "description": "SortKey"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "PageNumber"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Limit"
          },
          "need_pagination": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Need Pagination",
            "description": "Need Pagination",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "filter",
          "sort_order",
          "sort_key",
          "page_number",
          "limit"
        ],
        "title": "UserGroupsList"
      },
      "UserGroupsRecordResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "users": {
            "items": {},
            "type": "array",
            "title": "Users",
            "default": []
          },
          "projects": {
            "items": {},
            "type": "array",
            "title": "Projects",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "name",
          "description"
        ],
        "title": "UserGroupsRecordResponse"
      },
      "UserGroupsResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id"
          },
          "create_time": {
            "type": "integer",
            "title": "Create Time"
          },
          "last_update_time": {
            "type": "integer",
            "title": "Last Update Time"
          },
          "create_uid": {
            "type": "string",
            "title": "Create Uid"
          },
          "last_update_uid": {
            "type": "string",
            "title": "Last Update Uid"
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "user_ids": {
            "items": {},
            "type": "array",
            "title": "User Ids",
            "default": []
          },
          "project_ids": {
            "items": {},
            "type": "array",
            "title": "Project Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "_id",
          "create_time",
          "last_update_time",
          "create_uid",
          "last_update_uid",
          "is_deleted",
          "name",
          "description"
        ],
        "title": "UserGroupsResponse"
      },
      "UserGroupsUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description"
          },
          "user_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ids",
            "description": "UserIds",
            "default": []
          },
          "project_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Ids",
            "description": "ProjectsIds",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "UserGroupsUpdate"
      },
      "UserPromptSearch": {
        "properties": {
          "chat_model": {
            "type": "object",
            "title": "Chat Model",
            "description": "ChatModel"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "ProjectId"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "system_role": {
            "type": "string",
            "title": "System Role",
            "description": "SystemRole"
          },
          "llm_type": {
            "type": "string",
            "title": "Llm Type",
            "description": "LLMType"
          },
          "re_rank": {
            "type": "boolean",
            "title": "Re Rank",
            "description": "IsReRank",
            "default": false
          },
          "doc_ids": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Ids",
            "description": "DocIds",
            "default": []
          },
          "is_full_doc": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Full Doc",
            "description": "IsFullDoc",
            "default": false
          },
          "redline_rules_review": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redline Rules Review",
            "description": "RedlineRulesReview",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "chat_model",
          "project_id",
          "prompt",
          "system_role",
          "llm_type"
        ],
        "title": "UserPromptSearch"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "CopilotSecurity": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "Copilot Authorization"
    },
    {
      "name": "ContractType",
      "description": "Manage contract types"
    },
    {
      "name": "SSO",
      "description": "SSO Provider Integration"
    },
    {
      "name": "Clause",
      "description": "Redline Clause Api endpoints"
    },
    {
      "name": "Discovery",
      "description": "Document Discovery Features"
    },
    {
      "name": "Document",
      "description": "Document General Purpose Api"
    },
    {
      "name": "Drive",
      "description": "Leah Drive Features"
    },
    {
      "name": "Extraction",
      "description": "Document Extraction Features"
    },
    {
      "name": "Helpdesk",
      "description": "Leah Helpdesk Features"
    },
    {
      "name": "LLM",
      "description": "LLM Dependency entry points"
    },
    {
      "name": "Model",
      "description": "Large Language Model"
    },
    {
      "name": "Point",
      "description": "Extraction Points Builder"
    },
    {
      "name": "Project",
      "description": "Project endpoints"
    },
    {
      "name": "Prompt",
      "description": "Prompt Api endpoints"
    },
    {
      "name": "Redline",
      "description": "Redline Api endpoints"
    },
    {
      "name": "Streaming",
      "description": "LLM Streaming Api endpoints"
    },
    {
      "name": "Template",
      "description": "Template Api endpoints"
    },
    {
      "name": "V1",
      "description": "Business Models"
    }
  ]
}